76 'test cases'

 1 =====================
TestDefaultSuppress
expected: {} got {}
expected: { foo: 'a' } got { foo: 'a' }
expected: { foo: 'a', bar: [ 'b' ] } got { foo: 'a', bar: [ 'b' ] }
expected: { baz: true } got { baz: true }
expected: { foo: 'a', baz: true } got { foo: 'a', baz: true }
expected: { bar: [ 'b' ], foo: 'a', baz: true } got { baz: true, foo: 'a', bar: [ 'b' ] }
successes tests: 6 of 6
[-x] TestDefaultSuppress: error: Unrecognized arguments: -x.

failure tests: 1 of 1

 2 =====================
TestEmptyAndSpaceContainingArguments
expected: { y: null, x: '' } got { x: '', y: null }
expected: { y: null, x: 'a badger' } got { x: 'a badger', y: null }
expected: { y: null, x: '-a badger' } got { x: '-a badger', y: null }
expected: { y: '', x: null } got { y: '' }
{ name: 'AssertionError',
  message: undefined,
  actual: { y: '' },
  expected: { y: '', x: null },
  operator: 'deepEqual' }
expected: { y: 'a badger', x: null } got { y: 'a badger' }
{ name: 'AssertionError',
  message: undefined,
  actual: { y: 'a badger' },
  expected: { y: 'a badger', x: null },
  operator: 'deepEqual' }
expected: { y: '-a badger', x: null } got { y: '-a badger' }
{ name: 'AssertionError',
  message: undefined,
  actual: { y: '-a badger' },
  expected: { y: '-a badger', x: null },
  operator: 'deepEqual' }
expected: { y: 'a badger', x: null } got { y: 'a badger' }
{ name: 'AssertionError',
  message: undefined,
  actual: { y: 'a badger' },
  expected: { y: 'a badger', x: null },
  operator: 'deepEqual' }
expected: { y: '-a badger', x: null } got { y: '-a badger' }
{ name: 'AssertionError',
  message: undefined,
  actual: { y: '-a badger' },
  expected: { y: '-a badger', x: null },
  operator: 'deepEqual' }
TODO: SUCCESSES TESTS: 3 of 8
[-y] argument "-y/--yyy": Expected one argument.
failure tests: 1 of 1

 3 =====================
TestNargsRemainder
expected: { y: [], x: 'X', z: null } got { x: 'X', y: [], z: null }
expected: { y: [], x: 'X', z: 'Z' } got { x: 'X', y: [], z: 'Z' }
expected: { y: [ 'A', 'B', '-z', 'Z' ], x: 'X', z: null } got { x: 'X', y: [ 'A', 'B', '-z', 'Z' ], z: null }
expected: { y: [ 'Y', '--foo' ], x: 'X', z: null } got { x: 'X', y: [ 'Y', '--foo' ], z: null }
successes tests: 4 of 4
[] TestNargsRemainder: error: too few arguments

[-z] argument "-z": Expected one argument.
[-z Z] TestNargsRemainder: error: too few arguments

failure tests: 3 of 3

 4 =====================
TestNargsZeroOrMore
expected: { y: [], x: null } got { x: null, y: [] }
expected: { y: [], x: [] } got { x: [], y: [] }
expected: { y: [], x: [ 'a' ] } got { x: [ 'a' ], y: [] }
expected: { y: [ 'b' ], x: [ 'a' ] } got { x: [ 'a' ], y: [ 'b' ] }
expected: { y: [ 'a' ], x: null } got { x: null, y: [ 'a' ] }
expected: { y: [ 'a' ], x: [] } got { x: [], y: [ 'a' ] }
expected: { y: [ 'a' ], x: [ 'b' ] } got { x: [ 'b' ], y: [ 'a' ] }
successes tests: 7 of 7
failure tests: 0 of 0

 5 =====================
TestOptionLike
expected: { y: null, x: null, z: [] } got { x: null, y: null, z: [] }
expected: { y: null, x: 2.5, z: [] } got { x: 2.5, y: null, z: [] }
expected: { y: null, x: 2.5, z: [ 'a' ] } got { x: 2.5, y: null, z: [ 'a' ] }
expected: { y: 0.5, x: null, z: [] } got { x: null, y: 0.5, z: [] }
expected: { y: -0.5, x: null, z: [] } got { x: null, y: -0.5, z: [] }
expected: { y: 0.5, x: null, z: [] } got { x: null, y: 0.5, z: [] }
expected: { y: 0.5, x: null, z: [ 'a' ] } got { x: null, y: 0.5, z: [ 'a' ] }
expected: { y: null, x: null, z: [ 'a' ] } got { x: null, y: null, z: [ 'a' ] }
expected: { y: null, x: 1, z: [ 'a' ] } got { x: 1, y: null, z: [ 'a' ] }
expected: { y: null, x: 1, z: [ 'a' ] } got { x: 1, y: null, z: [ 'a' ] }
expected: { y: 1, x: null, z: [ 'a' ] } got { x: null, y: 1, z: [ 'a' ] }
successes tests: 11 of 11
[-x] argument "-x": Expected one argument.
[-y2.5] TestOptionLike: error: Unrecognized arguments: -y2.5.

[-xa] argument "-x": Invalid float value: a
[-x -a] argument "-x": Expected one argument.
[-x -3] argument "-x": Expected one argument.
[-x -3.5] argument "-x": Expected one argument.
[-3 -3.5] argument "-3": Expected one argument.
[-x -2.5] argument "-x": Expected one argument.
OOPS, no error -x -2.5 a
[-3 -.5] argument "-3": Expected one argument.
[a x -1] TestOptionLike: error: Unrecognized arguments: -1.

OOPS, no error -x -1 a
OOPS, no error -3 -1 a
TODO: FAILURE TESTS: 10 of 13

 6 =====================
TestOptionalsActionAppend
expected: { baz: null } got { baz: null }
expected: { baz: [ 'a' ] } got { baz: [ 'a' ] }
expected: { baz: [ 'a', 'b' ] } got { baz: [ 'a', 'b' ] }
successes tests: 3 of 3
[a] TestOptionalsActionAppend: error: Unrecognized arguments: a.

[--baz] argument "--baz": Expected one argument.
[a --baz] argument "--baz": Expected one argument.
[--baz a b] TestOptionalsActionAppend: error: Unrecognized arguments: b.

failure tests: 4 of 4

 7 =====================
TestOptionalsActionAppendConst
expected: { b: null } got { b: null }
expected: { b: [ 'Exception' ] } got { b: [ 'Exception' ] }
expected: { b: [ 'Exception', 'x', 'Exception', 'yz' ] } got { b: [ 'Exception', 'x', 'Exception', 'yz' ] }
successes tests: 3 of 3
[a] TestOptionalsActionAppendConst: error: Unrecognized arguments: a.

[-c] argument "-c": Expected one argument.
[a -c] argument "-c": Expected one argument.
[-bx] argument "-b": ignored explicit argument %r
[-b x] TestOptionalsActionAppendConst: error: Unrecognized arguments: x.

failure tests: 5 of 5

 8 =====================
TestOptionalsActionAppendConstWithDefault
expected: { b: [ 'X' ] } got { b: null }
{ name: 'AssertionError',
  message: undefined,
  actual: { b: null },
  expected: { b: [ 'X' ] },
  operator: 'deepEqual' }
expected: { b: [ 'X', 'Exception' ] } got { b: [ 'Exception' ] }
{ name: 'AssertionError',
  message: undefined,
  actual: { b: [ 'Exception' ] },
  expected: { b: [ 'X', 'Exception' ] },
  operator: 'deepEqual' }
expected: { b: [ 'X', 'Exception', 'x', 'Exception', 'yz' ] } got { b: [ 'Exception', 'x', 'Exception', 'yz' ] }
{ name: 'AssertionError',
  message: undefined,
  actual: { b: [ 'Exception', 'x', 'Exception', 'yz' ] },
  expected: { b: [ 'X', 'Exception', 'x', 'Exception', 'yz' ] },
  operator: 'deepEqual' }
TODO: SUCCESSES TESTS: 0 of 3
[a] TestOptionalsActionAppendConstWithDefault: error: Unrecognized arguments: a.

[-c] argument "-c": Expected one argument.
[a -c] argument "-c": Expected one argument.
[-bx] argument "-b": ignored explicit argument %r
[-b x] TestOptionalsActionAppendConstWithDefault: error: Unrecognized arguments: x.

failure tests: 5 of 5

 9 =====================
TestOptionalsActionAppendWithDefault
expected: { baz: [ 'X' ] } got { baz: 'X' }
{ name: 'AssertionError',
  message: undefined,
  actual: { baz: 'X' },
  expected: { baz: [ 'X' ] },
  operator: 'deepEqual' }
expected: { baz: [ 'X', 'a' ] } got { baz: [ 'X', 'a' ] }
expected: { baz: [ 'X', 'a', 'b' ] } got { baz: [ 'X', 'a', 'b' ] }
TODO: SUCCESSES TESTS: 2 of 3
[a] TestOptionalsActionAppendWithDefault: error: Unrecognized arguments: a.

[--baz] argument "--baz": Expected one argument.
[a --baz] argument "--baz": Expected one argument.
[--baz a b] TestOptionalsActionAppendWithDefault: error: Unrecognized arguments: b.

failure tests: 4 of 4

 10 =====================
TestOptionalsActionCount
expected: { x: null } got { x: null }
expected: { x: 1 } got { x: 1 }
successes tests: 2 of 2
[a] TestOptionalsActionCount: error: Unrecognized arguments: a.

[-x a] TestOptionalsActionCount: error: Unrecognized arguments: a.

[-x b] TestOptionalsActionCount: error: Unrecognized arguments: b.

[-x a -x b] TestOptionalsActionCount: error: Unrecognized arguments: a b.

failure tests: 4 of 4

 11 =====================
TestOptionalsActionStore
expected: { x: null } got { x: null }
expected: { x: 'foo' } got { x: 'foo' }
successes tests: 2 of 2
[a] TestOptionalsActionStore: error: Unrecognized arguments: a.

[a -x] argument "-x": Expected one argument.
failure tests: 2 of 2

 12 =====================
TestOptionalsActionStoreConst
expected: { y: null } got { y: null }
expected: { y: 'object' } got { y: 'object' }
successes tests: 2 of 2
[a] TestOptionalsActionStoreConst: error: Unrecognized arguments: a.

failure tests: 1 of 1

 13 =====================
TestOptionalsActionStoreFalse
expected: { z: true } got { z: true }
expected: { z: false } got { z: false }
successes tests: 2 of 2
[a] TestOptionalsActionStoreFalse: error: Unrecognized arguments: a.

[-za] argument "-z": ignored explicit argument %r
[-z a] TestOptionalsActionStoreFalse: error: Unrecognized arguments: a.

failure tests: 3 of 3

 14 =====================
TestOptionalsActionStoreTrue
expected: { apple: false } got { apple: false }
expected: { apple: true } got { apple: true }
successes tests: 2 of 2
[a] TestOptionalsActionStoreTrue: error: Unrecognized arguments: a.

[--apple=b] [_.sprintf] huh?
[--apple b] TestOptionalsActionStoreTrue: error: Unrecognized arguments: b.

failure tests: 3 of 3

 15 =====================
TestOptionalsAlmostNumericAndPositionals
expected: { y: false, x: null } got { y: false }
{ name: 'AssertionError',
  message: undefined,
  actual: { y: false },
  expected: { y: false, x: null },
  operator: 'deepEqual' }
expected: { y: false, x: '-2' } got { x: '-2', y: false }
expected: { y: false, x: 'a' } got { x: 'a', y: false }
expected: { y: true, x: null } got { y: true }
{ name: 'AssertionError',
  message: undefined,
  actual: { y: true },
  expected: { y: true, x: null },
  operator: 'deepEqual' }
expected: { y: true, x: 'a' } got { x: 'a', y: true }
TODO: SUCCESSES TESTS: 3 of 5
[-k3] TestOptionalsAlmostNumericAndPositionals: error: Unrecognized arguments: -k3.

failure tests: 1 of 1

 16 =====================
TestOptionalsAlternatePrefixChars
camelized: { add_help: false,
  prefix_chars: '+:/',
  addHelp: 'false',
  prefixChars: '+:/' }
